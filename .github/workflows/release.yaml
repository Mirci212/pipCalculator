name: Publish to PyPI on Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  extract_info:
    runs-on: ubuntu-latest
    outputs:
      package_name: ${{ steps.extract.outputs.package_name }}
      version: ${{ steps.extract.outputs.version }}
    steps:
      - name: Extract package name and version
        id: extract
        run: |
          PACKAGE_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "package_name=${PACKAGE_NAME}" >> "$GITHUB_OUTPUT"

          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

  publish:
    needs: extract_info
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # ❗️Wichtig für Trusted Publishing
    env:
      PACKAGE_NAME: ${{ needs.extract_info.outputs.package_name }}
      VERSION: ${{ needs.extract_info.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # wichtig für Tag-Zugriff

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tools
        run: pip install setuptools wheel build

      - name: Ensure README exists
        run: |
          if [ ! -f README.md ]; then
            echo "# ${{ env.PACKAGE_NAME }}" > README.md
            echo "Auto-generated package description." >> README.md
          fi

      - name: Ensure required packages exist
        run: |
          for pkg in CalcMaier Foods; do
            if [ ! -d "$pkg" ]; then
              echo "Missing $pkg folder. Creating dummy package."
              mkdir -p "$pkg"
              echo "# Dummy package" > "$pkg/__init__.py"
            elif [ ! -f "$pkg/__init__.py" ]; then
              echo "# Package marker" > "$pkg/__init__.py"
            fi
          done

      - name: Generate pyproject.toml
        run: |
          cat > pyproject.toml <<EOF
          [build-system]
          requires = ["setuptools>=77.0.0", "wheel"]
          build-backend = "setuptools.build_meta"

          [project]
          name = "${{ env.PACKAGE_NAME }}"
          version = "${{ env.VERSION }}"
          description = "Auto-generated Python package"
          readme = "README.md"
          requires-python = ">=3.7"
          license = "MIT"
          authors = [
            { name = "Auto Publisher", email = "no-reply@example.com" }
          ]
          classifiers = [
            "Programming Language :: Python :: 3",
            "Operating System :: OS Independent"
          ]

          [project.urls]
          Homepage = "https://github.com/${{ github.repository }}"

          [tool.setuptools]
          packages = ["CalcMaier", "Foods"]
          EOF

      - name: Build package
        run: python -m build

      - name: Verify distributions
        run: ls -l dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
