name: Publish to PyPI and GitHub Release

on:
  release:
    types: [published]  # Triggers when a release is published (not just created)
  workflow_dispatch:

env:
  PACKAGE_NAME: ${{ github.repository.split('/')[1] }}

jobs:
  extract_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - name: Extract version from tag
        id: extract
        run: |
          # Remove 'v' prefix from tag (e.g., v1.0.0 â†’ 1.0.0)
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

  build_and_publish:
    needs: extract_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tools
        run: pip install setuptools wheel poetry

      - name: Set version with Poetry
        run: poetry version ${{ needs.extract_version.outputs.version }}

      - name: Build distributions
        run: poetry build

      - name: Upload artifacts (for GitHub Release)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: dist/
          verbose: true

  create_github_release:
    needs: [extract_version, build_and_publish]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.extract_version.outputs.version }}
          name: "v${{ needs.extract_version.outputs.version }}"
          body: "Automated release for version ${{ needs.extract_version.outputs.version }}"
          files: dist/*
